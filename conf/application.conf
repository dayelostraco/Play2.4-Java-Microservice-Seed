# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "Ht@wP$WVQkJcw3o$9[P27C6kVt4iZmq;ia?Ha4Z&ghj)c&#793"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Application Filters
# ~~~~~~
play.http.filters = "filters.GZipFilters"

# Application Modules
# ~~~~~
play.modules.enabled += "modules.GuiceModule"

# GZip Filter Configuration
gzip {
  # The buffer size to use for gzipped bytes
  bufferSize = 8k

  # The maximum amount of content to buffer for gzipping in order to calculate the content length before falling back
  # to chunked encoding.
  chunkedThreshold = 100k
}

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

# You can expose this datasource via JNDI if needed (Useful for JPA)
db.default.jndiName = MicroserviceDS
jpa.default = MicroserviceDS

db {
  // In Memory
  default {
    pool = hikaricp
    jndiName = MicroserviceDS
    url = "jdbc:h2:mem:play;MODE=MYSQL"
    username = "root"
    password = ""
    dataSourceClassName = org.h2.Driver
    poolName = MicroserviceDS
    autoCommit = true
    connectionTimeout = 30 seconds
    idleTimeout = 10 minutes
    maxLifetime = 30 minutes
    maximumPoolSize = 100
    connectionInitSql = "SELECT 1"
    validationTimeout = 5 seconds
  }
  // MySQL
//  default {
//    pool = hikaricp
//    jndiName = MicroserviceDS
//    url = "jdbc:mysql://127.0.0.1:3306/microservice"
//    username = "root"
//    password = "password"
//    dataSourceClassName = com.mysql.jdbc.Driver
//    poolName = "MicroserviceDS"
//    autoCommit = true
//    connectionTimeout = 30 seconds
//    idleTimeout = 10 minutes
//    maxLifetime = 30 minutes
//    maximumPoolSize = 100
//    connectionInitSql = "1+1=2"
//    validationTimeout = 5 seconds
//  }
}

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
ebean.default="models.*"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled
play.evolutions.db.default.autoApply = true
play.evolutions.db.default.autoApplyDowns = true

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# Multipart Settings
# ~~~~~
# Configures the settings for handling multipart file uploads

# Parser Settings
parsers.MultipartFormData.maxLength = 30000K

# AWS Feature Credentials and Settings
# ~~~~~
# Place all AWS Access and Secret Key credentials here

# IAM Credentials
aws.accessKey = "ACCESS_KEY"
aws.secretKey = "SECRET_KEY"

# S3 Feature Settings
aws.s3.baseUrl = "https://s3.amazonaws.com/"

# Twilio Feature Settings
# ~~~~~
# Place all Twilio credentials and settings here
twilio.sms.phoneNumber = "+18438675309"
twilio.mms.phoneNumber = "+18438675309"
twilio.voice.phoneNumber = "+18438675309"
twilio.accountSid = "ACCOUNT_SID"
twilio.primaryToken = "PRIMARY_TOKEN"
twilio.secondaryToken = "SECONDARY_TOKEN"
twilio.test.accountSid = "TEST_ACCOUNT_SID"
twilio.test.token = "TEST_TOKEN"

# Swagger Documentation
# ~~~~~
# Automatically generate Swagger JSON for Controller classes that are
# leveraging Swagger Annotations
api.version = 1.0.0
swagger.api.basepath = "http://localhost:9000"
